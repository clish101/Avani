# Generated by Django 3.2.5 on 2021-08-19 07:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment_Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_date', models.DateField(default=django.utils.timezone.now)),
                ('seen', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancelled_by_patient', models.BooleanField(default=False)),
                ('second_opinion', models.BooleanField(default=False)),
                ('sent_to_patient', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Second_Opinion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_date_second', models.DateField(default=django.utils.timezone.now)),
                ('seen_second', models.BooleanField(default=False)),
                ('accepted_second', models.BooleanField(default=False)),
                ('cancelled_second', models.BooleanField(default=False)),
                ('cancelled_by_patient_second', models.BooleanField(default=False)),
                ('sent_to_patient_second', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='patient.user')),
                ('email', models.EmailField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('speciality', models.CharField(max_length=200)),
                ('npi', models.CharField(max_length=200)),
                ('education', models.TextField()),
                ('qualifications', models.TextField()),
                ('places_worked', models.TextField()),
                ('consultation_fee', models.CharField(max_length=200)),
                ('venue_of_operation', models.CharField(max_length=200)),
                ('insurance', models.CharField(max_length=200)),
                ('insurance2', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance3', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance4', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance5', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='patient.user')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('insurance', models.CharField(max_length=200)),
                ('insuranceID', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('current_medication', models.TextField(blank=True, null=True)),
                ('preexisting_medication', models.TextField(blank=True, null=True)),
                ('next_of_kin', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Rating_Second',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_second', models.CharField(max_length=200)),
                ('review_second', models.TextField()),
                ('appointment_second', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.second_opinion')),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.CharField(max_length=200)),
                ('review', models.TextField()),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.appointment_request')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback_Second',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_second', models.TextField()),
                ('notes_second', models.TextField()),
                ('second_opinion_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.second_opinion')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription', models.TextField()),
                ('notes', models.TextField()),
                ('appointment_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.appointment_request')),
            ],
        ),
        migrations.AddField(
            model_name='second_opinion',
            name='doctor_app_second',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_second', to='patient.doctor'),
        ),
        migrations.AddField(
            model_name='second_opinion',
            name='patient_app_second',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_second', to='patient.patient'),
        ),
        migrations.AddField(
            model_name='appointment_request',
            name='doctor_app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_app', to='patient.doctor'),
        ),
        migrations.AddField(
            model_name='appointment_request',
            name='patient_app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_app', to='patient.patient'),
        ),
    ]
